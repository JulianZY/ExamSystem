<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
    http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
    <!-- 加载配置文件-->
    <context:property-placeholder location="classpath:jdbc.properties"/>	
    <!-- dataSource -->
	<!-- <bean id="dataSource" class="com.alibaba.druid.pool.Druiddb" init-method="init" destroy-method="close">
		<property name="driverClassName" value="${db.driverClassName}"/>
		<property name="url" value="${db.url}"/>
		<property name="username" value="${db.username}" />
		<property name="password" value="${db.password}" />
		<property name="initialSize" value="${db.initialSize}"/>
		<property name="maxActive" value="${db.maxActive}"/>
		<property name="maxWait" value="30000"/>
		<property name="maxIdle" value="${db.maxIdle}"/>
		<property name="minIdle" value="${db.minIdle}"/>
		<property name="validationQuery" value="${db.validationQuery}"/>
		<property name="testWhileIdle" value="${db.testWhileIdle}"/>
		<property name="testOnBorrow" value="${db.testOnBorrow}"/>
		<property name="testOnReturn" value="${db.testOnReturn}"/>
		<property name="timeBetweenEvictionRunsMillis" value="${db.timeBetweenEvictionRunsMillis}" />
		<property name="minEvictableIdleTimeMillis" value="${db.minEvictableIdleTimeMillis}" />
		<property name="poolPreparedStatements" value="${db.poolPreparedStatements}" />
		<property name="maxPoolPreparedStatementPerConnectionSize" value="${db.maxPoolPreparedStatementPerConnectionSize}" />
		<property name="filters" value="${db.filters}" />
	</bean>
	sqlSessionFactory
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<property name="mapperLocations" value="classpath:com/test/testsys/dao/*.xml"/>
	</bean>
	DAO接口所在包名，Spring会自动查找其下的类
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		注入sqlSessionFactory
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
		<property name="basePackage" value="com.test.testsys.dao"/>
	</bean>
	配置事务管理器
    <bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager" id="transactionManager">
        注入数据库连接池
        <property name="dataSource" ref="dataSource"/>
    </bean>
 
    配置基于注解的声明式事务
    <tx:annotation-driven transaction-manager="transactionManager"/> -->
	
</beans>